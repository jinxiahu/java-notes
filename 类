# java-notes
java中需要注意的概念
java三大特性：
   继承 封装  多态
   
在java中，使用类来进行封装，为了保证安全性一般使用引用来访问类中的成员变量和方法等；

overload 和 override的区别？
overload称为方法的重载，是指多个方法具有相同的名字，但是方法的参数个数或者类型不同。通过方法的重载可以实现多态。
override：方法的重写，或覆盖； 是指子类重写父类的方法，用于扩展或修改继承的方法、属性、索引器或事件的抽象或虚拟实现.
         1.重写基方法必须具有与override方法相同的签名（参数）；
         2.override声明不能更改virtual方法的可访问性，且override方法与virtual方法必须具有相同级别访问修饰符。
         3.不能用new、static、virtual修饰符修改override方法。
         4.重写属性声明必须指定与继承的属性完全相同的访问修饰符、类型和名称。
         5.重写的属性必须是virtual、abstract或override。
         6.不能重写非虚方法或静态方法。
         7.父类中有abstract，那么子类同名方法必定有override，若父类中有 virtual方法，子类同名方法不一定是override，可能是overload。
         8.override必定有父子类关系。
 
 this的使用：
     在方法和构造方法中，可以使用this来访问字段及方法
     使用this解决局部变量与域同名的问题
     在构造方法中，使用this调用另一个构造方法（该语句必须放在第一句）
 
 
 继承：
      java中只支持单继承，也就是说一个类只能有一个直接父类。
       子类不仅继承父类的所有的状态和行为（非私有），还可以修改父类的状态或重载父类的行为，还可以添加新的状态和行为
       好处：提高程序的抽象程度 实现代码重用，提高开发效率和可维护性
    
    构造方法和类同名，构造方法是不可以继承的！！！
    
    super的使用
          使用super访问父类的域和方法
          使用super以区别同名的域和方法
          使用super来调用父类的构造方法(使用时必须将super()放在第一句)
      父类对象与子类对象的转化
             子类对象也一定是一个父类的对象
             但父类的对象不一定是子类的对象
             如果一个方法的形式参数定义的是父类对象，那么调用这个方法时，可以使用子类对象作为实际参数。
             如果父类对象引用指向的实际是一个子类对象，那么这个父类对象的引用可以用强制类型转换（ casting)成子类对象的引用。强制类型转化在编译时可以通过但是运行时会出错
      包：
        包有两个方面的含义：一是名字空间、存储路径。二是可访问性（同一个包中的各个类，默认情况下是可以互相访问的）
      
      
      成员的访问控制符：
      private：同一个类中可见
      protect：同一个类，同一个包，不同包的子类等可见，不同包的子类不可见
      public：都可见
      默认：当成员没有给上述的修饰符时，默认对同一个包、同一个类可见
      
      
      非访问控制符：
      static：静态的、非实例化的、类的  可以修饰内部类   可以修饰成员
      final：最终的、不可改变的         可以修饰类      可以修饰成员     还可以修饰局部变量
      abstract：抽象的、不可实例化的    可以修饰类       可以修饰成员
     
      static字段的本质特点：静态字段是类的字段，不属于任何一个对象实例。
                          它不保存在某个对象实例的内存区间中，而是保存在类的内存区域的公共存储单元。
                          类变量可以通过类名直接访问，也可以通过实例对象来访问，两种方法的结果是相同的。
                          如System类的in和out对象，就是属于类的域，直接用类名来访问，即System.in和System.out。
      
      static方法：
        用static修饰符修饰的方法仅属于类的静态方法，又称为类方法。
      • 与此相对，不用static修饰的方法，则为实例方法。
      • 类方法的本质是该方法是属于整个类的， 不是属于某个实例的。
      • 声明一个方法为static有以下几重含义。
         (1) 非static的方法是属于某个对象的方法，在这个对象创建时，对象
         的方法在内存中拥有自己专用的代码段。而static的方法是属于整个类
         的，它在内存中的代码段将随着类的定义而进行分配和装载，不被任
         何一个对象专有。         
         (2) 由于static方法是属于整个类的，所以它不能操纵和处理属于某个对象的成员变量，而只能处理属于整个类的成员变量，即static方法只能处理本类中的static域或调用static方法。
         (3) static方法中，不能访问实例变量， 不能使用this 或super。
         (4) 调用这个方法时，应该使用类名直接调用，也可以用某一个具体的对象名。
